The Merge Sort algorithm is a divide-and-conquer algorithm that sorts an array by first breaking it down into smaller arrays, and then building the array back together the correct way so that it is sorted.

How it works:

Divide the unsorted array into two sub-arrays, half the size of the original.
Continue to divide the sub-arrays as long as the current piece of the array has more than one element.
Merge two sub-arrays together by always putting the lowest value first.
Keep merging until there are no sub-arrays left.

Time complexity: O(n log n) in all cases: best, average, and worst. 
This makes it highly efficient compared to algorithms like Bubble Sort (O(nÂ²)) for large datasets.

Space Complexity: O(n)
This means it requires extra memory proportional to the input size. 
